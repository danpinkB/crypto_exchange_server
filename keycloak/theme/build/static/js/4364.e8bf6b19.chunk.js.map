{"version":3,"file":"static/js/4364.e8bf6b19.chunk.js","mappings":"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","sources":["keycloak-theme/login/Menu.tsx","keycloak-theme/login/Template.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport type { ComponentPropsWithoutRef, ReactNode } from \"react\";\nimport * as Ariakit from \"@ariakit/react\";\nimport type { HTMLMotionProps, MotionProps } from \"framer-motion\";\nimport { AnimatePresence, MotionConfig, motion } from \"framer-motion\";\n\nexport interface MenuProps extends ComponentPropsWithoutRef<\"div\"> {\n  open?: boolean;\n  setOpen?: (open: boolean) => void;\n  label: ReactNode;\n  disabled?: boolean;\n  animate?: MotionProps[\"animate\"];\n  transition?: MotionProps[\"transition\"];\n  variants?: MotionProps[\"variants\"];\n  initial?: MotionProps[\"initial\"];\n  exit?: MotionProps[\"exit\"];\n}\n\nexport const Menu = forwardRef<HTMLDivElement, MenuProps>(function Menu(\n  {\n    open,\n    setOpen,\n    label,\n    children,\n    animate,\n    transition,\n    variants,\n    initial,\n    exit,\n    ...props\n  },\n  ref,\n) {\n  const menu = Ariakit.useMenuStore({ open, setOpen });\n  const currentPlacement = menu.useState(\"currentPlacement\");\n  const mounted = menu.useState(\"mounted\");\n  return (\n    <MotionConfig reducedMotion=\"user\">\n      <Ariakit.MenuButton store={menu} ref={ref} className=\"button\" {...props}>\n        {label}\n        <Ariakit.MenuButtonArrow />\n      </Ariakit.MenuButton>\n      <AnimatePresence>\n        {mounted && (\n          <Ariakit.Menu\n            store={menu}\n            alwaysVisible\n            className=\"menu\"\n            // We'll use this data attribute to style the transform-origin\n            // property based on the menu's placement. See style.css.\n            data-placement={currentPlacement}\n            render={\n              <motion.div\n                initial={initial}\n                exit={exit}\n                animate={animate}\n                variants={variants}\n                transition={transition}\n              />\n            }\n          >\n            <Ariakit.MenuArrow className=\"menu-arrow\" />\n            {children}\n          </Ariakit.Menu>\n        )}\n      </AnimatePresence>\n    </MotionConfig>\n  );\n});\n\nexport const MenuItem = forwardRef<HTMLDivElement, HTMLMotionProps<\"div\">>(\n  function MenuItem(props, ref) {\n    return (\n      <Ariakit.MenuItem\n        ref={ref}\n        className=\"menu-item\"\n        render={<motion.div {...props} />}\n      />\n    );\n  },\n);\n","// Copy pasted from: https://github.com/InseeFrLab/keycloakify/blob/main/src/login/Template.tsx\n\nimport { assert } from \"keycloakify/tools/assert\";\nimport { clsx } from \"keycloakify/tools/clsx\";\nimport { usePrepareTemplate } from \"keycloakify/lib/usePrepareTemplate\";\nimport { type TemplateProps } from \"keycloakify/login/TemplateProps\";\nimport { useGetClassName } from \"keycloakify/login/lib/useGetClassName\";\nimport type { KcContext } from \"./kcContext\";\nimport { Menu, MenuItem } from \"./Menu\";\nimport type { MotionProps, Variants } from \"framer-motion\";\nimport type { I18n } from \"./i18n\";\nimport { useState } from \"react\";\n\nexport default function Template(props: TemplateProps<KcContext, I18n>) {\n    const [open, setOpen] = useState(false);\n    const {\n        displayInfo = false,\n        displayMessage = true,\n        displayRequiredFields = false,\n        displayWide = false,\n        showAnotherWayIfPresent = true,\n        headerNode,\n        showUsernameNode = null,\n        infoNode = null,\n        kcContext,\n        i18n,\n        doUseDefaultCss,\n        classes,\n        children\n    } = props;\n\n    const { getClassName } = useGetClassName({ doUseDefaultCss, classes });\n\n    const { msg, changeLocale, labelBySupportedLanguageTag, currentLanguageTag } = i18n;\n\n    const { realm, locale, auth, url, message, isAppInitiatedAction } = kcContext;\n\n    const { isReady } = usePrepareTemplate({\n        \"doFetchDefaultThemeResources\": doUseDefaultCss,\n        url,\n        \"stylesCommon\": [\n            \"node_modules/patternfly/dist/css/patternfly.min.css\",\n            \"node_modules/patternfly/dist/css/patternfly-additions.min.css\",\n            \"lib/zocial/zocial.css\"\n        ],\n        \"styles\": [\"css/login.css\"],\n        \"htmlClassName\": getClassName(\"kcHtmlClass\"),\n        \"bodyClassName\": undefined\n    });\n\n    if (!isReady) {\n        return null;\n    }\n\n    const menu = {\n        closed: {\n          scale: 0,\n          transition: {\n            delay: 0.15,\n          },\n        },\n        open: {\n          scale: 1,\n          transition: {\n            type: \"spring\",\n            duration: 0.4,\n            delayChildren: 0.2,\n            staggerChildren: 0.05,\n          },\n        },\n      } ;\n      \n      const item = {\n        variants: {\n          closed: { x: -16, opacity: 0 },\n          open: { x: 0, opacity: 1 },\n        },\n        transition: { opacity: { duration: 0.2 } },\n      } ;\n     \n    return (\n        <div className={getClassName(\"kcLoginClass\")}>\n             {realm.internationalizationEnabled && (assert(locale !== undefined), true) && locale.supported.length > 1 && (\n                        <div id=\"kc-locale\">\n                            <div id=\"kc-locale-wrapper\" className={getClassName(\"kcLocaleWrapperClass\")}>\n                                <div className=\"kc-dropdown float-right font-bold pr-6\" id=\"kc-locale-dropdown\">\n                                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                    <Menu\n                                        label= {labelBySupportedLanguageTag[currentLanguageTag]}\n                                        open={open}\n                                        setOpen={setOpen}\n                                        animate={open ? \"open\" : \"closed\"}\n                                        initial=\"closed\"\n                                        exit=\"closed\"\n                                        variants={menu}\n                                        >\n                                        {locale.supported.map(({ languageTag }) => (\n                                             <MenuItem key={languageTag} onClick={() => changeLocale(languageTag)} {...item}>{labelBySupportedLanguageTag[languageTag]}</MenuItem>\n                                        ))}\n                                     </Menu>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n            <div id=\"kc-header\" className={getClassName(\"kcHeaderClass\")}>\n                <div id=\"kc-header-wrapper\" className={getClassName(\"kcHeaderWrapperClass\")}>\n                {headerNode} {/**{msg(\"loginTitleHtml\", realm.displayNameHtml)}**/}\n                </div>\n            </div>\n\n            <div className={clsx(getClassName(\"kcFormCardClass\"), displayWide && getClassName(\"kcFormCardAccountClass\"))}>\n                <header className={getClassName(\"kcFormHeaderClass\")}>\n                   \n                    {!(auth !== undefined && auth.showUsername && !auth.showResetCredentials) ? (\n                        displayRequiredFields ? (\n                            <div className={getClassName(\"kcContentWrapperClass\")}>\n                                <div className={clsx(getClassName(\"kcLabelWrapperClass\"), \"subtitle\")}>\n                                    <span className=\"subtitle\">\n                                        <span className=\"required\">*</span>\n                                        {msg(\"requiredFields\")}\n                                    </span>\n                                </div>\n                               {/** <div className=\"col-md-10\">\n                                    <h1 id=\"kc-page-title\">{headerNode}</h1>\n                                </div>**/}\n                            </div>\n                        ) : (\n                            <>\n                           {/**  <h1 id=\"kc-page-title\">{headerNode}</h1> **/}\n                            </>\n                        )\n                    ) : displayRequiredFields ? (\n                        <div className={getClassName(\"kcContentWrapperClass\")}>\n                            <div className={clsx(getClassName(\"kcLabelWrapperClass\"), \"subtitle\")}>\n                                <span className=\"subtitle\">\n                                    <span className=\"required\">*</span> {msg(\"requiredFields\")}\n                                </span>\n                            </div>\n                            <div className=\"col-md-10\">\n                                {showUsernameNode}\n                                <div className={getClassName(\"kcFormGroupClass\")}>\n                                    <div id=\"kc-username\">\n                                        <label id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\n                                        <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\n                                            <div className=\"kc-login-tooltip\">\n                                                <i className={getClassName(\"kcResetFlowIcon\")}></i>\n                                                <span className=\"kc-tooltip-text\">{msg(\"restartLoginTooltip\")}</span>\n                                            </div>\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    ) : (\n                        <>\n                            {showUsernameNode}\n                            <div className={getClassName(\"kcFormGroupClass\")}>\n                                <div id=\"kc-username\">\n                                    <label id=\"kc-attempted-username\">{auth?.attemptedUsername}</label>\n                                    <a id=\"reset-login\" href={url.loginRestartFlowUrl}>\n                                        <div className=\"kc-login-tooltip\">\n                                            <i className={getClassName(\"kcResetFlowIcon\")}></i>\n                                            <span className=\"kc-tooltip-text\">{msg(\"restartLoginTooltip\")}</span>\n                                        </div>\n                                    </a>\n                                </div>\n                            </div>\n                        </>\n                    )}\n                </header>\n                <div id=\"kc-content\">\n                    <div id=\"kc-content-wrapper\">\n                        {/* App-initiated actions should not see warning messages about the need to complete the action during login. */}\n                        {displayMessage && message !== undefined && (message.type !== \"warning\" || !isAppInitiatedAction) && (\n                            <div className={clsx(\"alert\", `alert-${message.type}`)}>\n                                {message.type === \"success\" && <span className={getClassName(\"kcFeedbackSuccessIcon\")}></span>}\n                                {message.type === \"warning\" && <span className={getClassName(\"kcFeedbackWarningIcon\")}></span>}\n                                {message.type === \"error\" && <span className={getClassName(\"kcFeedbackErrorIcon\")}></span>}\n                                {message.type === \"info\" && <span className={getClassName(\"kcFeedbackInfoIcon\")}></span>}\n                                <span\n                                    className=\"kc-feedback-text\"\n                                    dangerouslySetInnerHTML={{\n                                        \"__html\": message.summary\n                                    }}\n                                />\n                            </div>\n                        )}\n                        {children}\n                        {auth !== undefined && auth.showTryAnotherWayLink && showAnotherWayIfPresent && (\n                            <form\n                                id=\"kc-select-try-another-way-form\"\n                                action={url.loginAction}\n                                method=\"post\"\n                                className={clsx(displayWide && getClassName(\"kcContentWrapperClass\"))}\n                            >\n                                <div\n                                    className={clsx(\n                                        displayWide && [getClassName(\"kcFormSocialAccountContentClass\"), getClassName(\"kcFormSocialAccountClass\")]\n                                    )}\n                                >\n                                    <div className={getClassName(\"kcFormGroupClass\")}>\n                                        <input type=\"hidden\" name=\"tryAnotherWay\" value=\"on\" />\n                                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                                        <a\n                                            href=\"#\"\n                                            id=\"try-another-way\"\n                                            onClick={() => {\n                                                document.forms[\"kc-select-try-another-way-form\" as never].submit();\n                                                return false;\n                                            }}\n                                        >\n                                            {msg(\"doTryAnotherWay\")}\n                                        </a>\n                                    </div>\n                                </div>\n                            </form>\n                        )}\n                        {displayInfo && (\n                            <div id=\"kc-info\" className={getClassName(\"kcSignUpClass\")}>\n                                <div id=\"kc-info-wrapper\" className={getClassName(\"kcInfoAreaWrapperClass\")}>\n                                    {infoNode}\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n"],"names":["Menu","forwardRef","_ref","ref","open","setOpen","label","children","animate","transition","variants","initial","exit","props","_objectWithoutProperties","_excluded","menu","Ariakit","currentPlacement","useState","mounted","_jsxs","MotionConfig","reducedMotion","_objectSpread","store","className","_jsx","AnimatePresence","alwaysVisible","render","motion","MenuItem","Template","_useState","_useState2","_slicedToArray","_props$displayInfo","displayInfo","_props$displayMessage","displayMessage","_props$displayRequire","displayRequiredFields","_props$displayWide","displayWide","_props$showAnotherWay","showAnotherWayIfPresent","headerNode","_props$showUsernameNo","showUsernameNode","_props$infoNode","infoNode","kcContext","i18n","doUseDefaultCss","classes","getClassName","useGetClassName","msg","changeLocale","labelBySupportedLanguageTag","currentLanguageTag","realm","locale","auth","url","message","isAppInitiatedAction","usePrepareTemplate","undefined","isReady","item","closed","x","opacity","duration","internationalizationEnabled","assert","supported","length","id","scale","delay","type","delayChildren","staggerChildren","map","languageTag","onClick","clsx","showUsername","showResetCredentials","_Fragment","attemptedUsername","href","loginRestartFlowUrl","concat","dangerouslySetInnerHTML","summary","showTryAnotherWayLink","action","loginAction","method","name","value","document","forms","submit"],"sourceRoot":""}